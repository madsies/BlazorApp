@page "/Overwatch"
@rendermode InteractiveServer

<style>
    #AddPlayer li
    {
        width: max-content;
        list-style: none;
        margin-left: auto;
        margin-right: auto;
    }

    #AddPlayer p 
    {
        margin-bottom: 0%;
        text-align: center;
    }

    #AddPlayer input, select
    {
        margin-bottom: 15px;
    }

    #AddPlayer 
    {
        background-color: paleturquoise;
        opacity: 0.7;
        border-radius: 15px;
        width: max-content;
        margin-left: 1%;
        margin-right: auto;
        padding: 10px;
        text-align: center;
        overflow: hidden;
        float:left;
    }

    #PlayerList
    {
        float: left;
        margin-left: 2.5%;
        background-color: peachpuff;
        opacity: 0.7;
        padding: 20px;
        border-radius: 15px;
        width: max-content;
    }

    #PlayerList p 
    {
        float: left;
        margin-left: 5px;
    }

    #PlayerList button
    {
        float: right;
        margin: 2px;
    }

    #PlayerList li
    {
        list-style: none;
        margin: 5px;
        width:100%;
        background-color: grey;
    }

    ul 
    {
        display: flex;
        flex-direction: column;
    }
    
    main
    {
        background: #edebec;
        background: linear-gradient(180deg,rgba(237, 235, 236, 1) 0%, rgba(255, 219, 227, 1) 48%, rgba(255, 171, 217, 1) 100%);
    }

</style>

<div id="SettingsContainer">
    <div id="AddPlayer">
        <h2>Add Player</h2>
        <ul>
            <li>
                <p>Username</p>
                <input type="text" @bind="newPlayerName">
            </li>

            <li>
            <p>Role</p>
                <select @bind="newPlayerRole">
                    <option value="@Classes.TANK">Tank</option>
                    <option value="@Classes.DAMAGE">DPS</option>
                    <option value="@Classes.SUPPORT">Support</option>
                    <option value="@Classes.FLEX">Flex</option>
                </select>
            </li>

            <li>
                <p>Rank (SR)</p>
                <input type="number" @bind="newPlayerRank">
            </li>
        </ul>

        <button @onclick="onAddPlayer">Add Player</button>
    </div>

    <div id="PlayerList">
        <h2>Free Players</h2>
        <ul>
            @foreach (Player p in manager.getFreePlayers())
            {
                <li>    
                    <p>@p.username</p>
                    <button>Captain</button>
                    <button @onclick="@(e => {manager.removePlayer(p);})">Remove</button>
                </li>
            }
        </ul>
    </div>

    <div id="MatchCreator">
        <h2>Admin Controls</h2>

        <p>Check Roles <input type="checkbox" bind="forceRolesCheck"></p>

        <ul>
            <li>
                <button @onclick="@(e => {manager.createEmptyMatch();})">Create Manual Lobby</button>
            </li>
            <li>
                <button>Create Random Lobby</button>
            </li>
            <li>
                <button>Create Balanced Lobby</button>
            </li>
        </ul>
    </div>

</div>

@foreach(Match m in manager.matchPool)
{
    <div id="Match">
        <div id="Players">
            <div id="team">
                <h4>@m.team1.name</h4>
                <ul>
                    @for (int i = 0; i < 5; i++)
                    {
                        int localindex = i; // This is because if u just use i, it'll equal 5 (end of loop)
                        @if (!m.team1.roster.getPlayers().ElementAt(i).dummy)
                        {
                            <li>
                                <p>@m.team1.roster.getPlayers()[i].username</p>
                                <button>Remove</button>
                            </li>
                        }
                        else
                        {
                            <li>
                                <select @onchange="e => {
                                    var player = manager.getPlayerFromUser(e.Value?.ToString() ?? string.Empty);
                                    if (player != null)
                                    {
                                        m.team1.addPlayer(player, localindex);
                                    }
                                }">
                                    @foreach(Player p in manager.getFreePlayers())
                                    {
                                        <option value="@p.username">@p.username</option>
                                    }
                                </select>
                            </li>
                        }
                    }
                </ul>
            </div>

            <div id="team">
                <h4>@m.team2.name</h4>
                <ul>
                    @foreach(Player member in m.team2.members)
                    {
                        <li>
                            <p>@member.username</p>
                            <button>Remove</button>
                        </li>
                    }
                </ul>
                
            </div>
        </div>
    </div>
}

@code
{
    GameManager manager = new GameManager();

    public string newPlayerName = "";
    public Classes newPlayerRole = Classes.FLEX;
    public int newPlayerRank = 0;
    public bool forceRolesCheck = false;
    public void onAddPlayer()
    {
        manager.addPlayer(newPlayerName, newPlayerRole);
        Console.Write(manager.playerPool);
    }

}