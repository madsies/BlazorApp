@page "/cookieClicker"
@rendermode InteractiveServer

<PageTitle>CookieClicker</PageTitle>

<h1>Cookie Clicker</h1>

<p role="status">Current count: @manager.getCookies()</p>

<style>
    ul {
        list-style-type: none;
        padding: 0px;
        margin:0px;
        overflow: hidden;
        background-color: black;
    }
    li {
        float: left;
        align-content: center;
        padding: 10px;
        margin:2px;
        background-color: pink;
    }
    li button {
        text-align: center;
    }
</style>

<ul>
@foreach (CookieHelper helper in manager.helpers)
{
    <li>
        <p>@(helper.helperName + "\n Owned:" + helper.amount)</p>
        <button class="btn btn-primary" @onclick="() => manager.upgradeHelper(helper)">@("Buy: "+helper.basePrice)</button>
    </li>
}
</ul>

<button class="btn btn-primary" @onclick="manager.onClick">Click</button>

@using System.Threading
@code {
    private Cookie manager = new Cookie();
    private Pokedex test = new Pokedex();

    private Timer? timer;

    protected override void OnInitialized()
    {
        timer = new Timer(new TimerCallback(OnTimerTick), null, 1000, 1000);
    }

    // In .blazor file for easier UI updating, data and functions in .cs

    private void OnTimerTick(object? state)
    {
        InvokeAsync(() => 
        {
            manager.addCookies(manager.getCPS());
            StateHasChanged();
        });
    }
    
}
